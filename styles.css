* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'poppins', sans-serif;
    outline: none;
}


body{
    background-color: rgb(1, 76, 1);
}

main{
    width: 375px;
    background-color: rgb(251, 251, 251);
    border-radius: 20px;
    border: 1px solid rgba(71, 71, 71, 0.606);
}

.logoGif{
    width: 360px;
    height: 360px;
    display: block; /*BLOCK USA TODA LINHA SÓ PARA ELA (vem por padrão),
    diferente do INLINE que compartilha a linha com outros elementos.
    Para centralizar elementos com display block deve-se usar o AUTO no margin
    left e right (direita e esquerda).*/
    margin-left: auto;
    margin-right: auto;
    margin-top: 20px auto;
}

main{
    margin: 0px auto 40px;
    padding: 44px 24px 23px;
}

label{
    color: #555;
    font-weight: 400;
    font-size: 14px;
}

select{
    background-color: #fff;
    border: 1px solid #BBBBBB;
    border-radius: 4PX;
    height: 48px;
    width: 100%;
    margin-bottom: 20px;
    appearance: none; /*Setinha do select que fica à direita*/
    padding-left: 18px;
    font-size: 17px;
    font-weight: 500;
    color: #444;
    cursor: pointer;

}


input{
    background-color: #fff;
    border: 1px solid #BBBBBB;
    border-radius: 4PX;
    height: 48px;
    width: 100%;
    margin-bottom: 20px;
    padding-left: 18px;
    font-size: 17px;
    font-weight: 600;
    color: #444;    
}

/*Mudando apenas a cor do placeholder sem mudar o VALOR do input*/
input::-webkit-input-placeholder {
    color: rgb(187, 187, 187);
 }
 input:-moz-placeholder { /* Firefox 18- */
    color: rgb(187, 187, 187); 
 }
 input::-moz-placeholder {  /* Firefox 19+ */
    color: rgb(187, 187, 187); 
 }
 input:-ms-input-placeholder {  
    color: rgb(187, 187, 187);  
 }


/* Este é um exemplo de como SUMIR com o placeholder após o clique acontecer (FOCUS)
input:focus::-webkit-input-placeholder {
    color: transparent;
 }
 input:focus:-moz-placeholder { /* Firefox 18- 
    color: transparent;  
 }
 input:focus::-moz-placeholder {  /* Firefox 19+ 
    color: transparent;  
 }
 input:focus:-ms-input-placeholder {  
    color: transparent;  
 }*/

option{
    font-weight: 500;
}

button{
    background-color: green;
    width: 100%;
    color: #fff;
    border-radius: 25px;
    border: none;
    height: 48px;
    font-size: 22px;
    font-weight: 500;
    margin: 20px 0px 20px 0px;
    /*transition: transform 0.3s ease;*/
}

button:hover{
    background-color: rgb(0, 88, 0);
    color: #fff;
    opacity: 0.9;
    cursor: pointer;
    border: 1px solid rgb(131, 131, 131);   
    animation: pulse 0.3s ease;
}

button:active{
    background-color: green;
    cursor: pointer;
}

@keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }

/*
.btConverter{
   
}

*/

section{
    border: 1px solid rgb(113, 113, 125);
    border-radius: 10px;
    margin-top: 36px;
    padding: 14px;

    display: flex; /*Com o display flex você pode alinhar itens do elemento em
    LINHAS ou COLUNAS. Por padrão, vem LINHA. Para alterar para coluna, use
    atributos como flex-direction como column. Para alinhar, use o align-itens: center*/

    flex-direction: column;
    align-items: center;
}

p{
    color: #222;
}

.seta{
    margin: 15px 0;
}

.moedaCaixa {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
}

.moeda{
    font-size: 14px;
    color: #222fff;
}

.valorMoeda, .valorMoedaAconverter{
    font-size: 20px;
    color: #222;
    font-weight: 600;
}